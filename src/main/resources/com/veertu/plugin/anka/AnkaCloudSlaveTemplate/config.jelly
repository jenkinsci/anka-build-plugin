<j:jelly xmlns:j="jelly:core"  xmlns:f="/lib/form" xmlns:c="/lib/credentials">
  <f:entry title="Cloud Name" field="cloudName" description="The Anka Build Cloud this Node Template/Label is attached to">
      <f:textbox value="${cloudName}" disabled="true" />
  </f:entry>

  <f:entry title="${%Target Label}" field="label" description="The label that jobs will target in order to start and utilize the started Jenkins Node/Agent">
      <f:textbox clazz="required" />
  </f:entry>

  <f:entry title="${%Jenkins Node Name Template}" field="nameTemplate" description="A string to include in the name of the started Jenkins Node/Agent">
      <f:textbox default="" />
  </f:entry>

  <f:entry title="${%Anka VM Template}" field="masterVmId" description="The Anka VM Template to use when starting the Jenkins Node/Agent (Java is assumed to be pre-installed)">
      <f:select />
  </f:entry>

  <f:entry title="${%Anka VM Template's Tag}" field="tag" description="The Anka VM Template's Tag to use">
      <f:select />
  </f:entry>

  <f:entry title="${%Anka VCPU}" field="vcpu" description="The # of cpu cores in the Anka VM (0 for no change). Requires template to be in stopped state">
      <f:textbox clazz="required number" default="0" />
  </f:entry>

  <f:entry title="${%Anka VRAM}" field="vram" description="The amount of RAM (in MB) in the Anka VM (0 for no change). Requires template to be in stopped state">
      <f:textbox clazz="required number" default="0" />
  </f:entry>

  <f:entry title="${%Node/Agent Description}" field="templateDescription">
      <f:textbox />
  </f:entry>

  <f:entry title="${%Launch Method}" field="launchMethod" description="Launch Method Jenkins will use when jobs want to perform actions inside of the Node/Agent">
        <table width="100%">
            <f:radioBlock inline="true" name="launchMethod" value="ssh" title="SSH" checked="${instance.launchMethodString != 'jnlp'}">
                <f:entry title="${%Credential}" description="The user and password to connect to the Node/Agent" field="credentialsId" >
                    <c:select/>
                </f:entry>
            </f:radioBlock>
            <f:radioBlock inline="true" name="launchMethod" title="JNLP" value="jnlp" checked="${instance.launchMethodString == 'jnlp'}" >
                <f:entry title="${%Extra JNLP arguments}" description="Arguments to append to JNLP command" field="extraArgs" >
                    <f:textbox default="" />
                </f:entry>

                <f:entry title="${%JNLP Url}" description="Specify a different url than jenkins root url to use for JNLP communication (this is not used for the download of JNLP in the VM)" field="jnlpJenkinsOverrideUrl" >
                    <f:textbox default="" />
                </f:entry>
                <f:entry title="${%Tunnel JNLP Connection}" description="Specify a tunnel if the agent needs it to connect to the master" field="jnlpTunnel" >
                    <f:textbox default="" />
                </f:entry>

            </f:radioBlock>
            <f:entry title="${%Java options}" description="Additional java options" field="javaArgs" >
                <f:textbox default="" />
            </f:entry>
        </table>
    </f:entry>

  <f:entry title="${%Maximum Allowed Nodes/Agents}" description="The number of Jenkins Nodes/Agents this template and label is allowed to start (0 is unlimited)" field="instanceCapacity">
      <f:textbox clazz="required number" default="0" />
  </f:entry>
  
  <f:entry title="${%Allowed Executors}" field="numberOfExecutors" description="This is the number of jobs/builds which can run on the started Jenkins Node/Agent that uses this Template">
      <f:textbox clazz="required number" default="1" />
  </f:entry>

  <f:entry title="${%Anka VM Workspace Path}" field="remoteFS" description="Where Jenkins will store the files/workspace on the started Node/Agent">
      <f:textbox clazz="required" default="/Users/anka/"/>
  </f:entry>

  <f:entry title="${%Keep Alive on Error}" field="keepAliveOnError" description="Keep the Jenkins Node/Agent (and Anka VM on the Anka Node) alive if the job running on it fails. Available for Freestyle jobs only.">
      <f:checkbox checked="${instance.isKeepAliveOnError()?'true':'false'}" field="keepAliveOnError" />
  </f:entry>

  <f:block>
      <f:entry title="${%Environment Variables}" description="These will be available inside of the started Node/Agent/Anka VM">
          <f:repeatable field="environments">
              <table width="100%">
                  <f:entry title="${%Name}" field="name">
                      <f:textbox />
                  </f:entry>
                  <f:entry title="${%Value}" field="value">
                      <f:textbox />
                  </f:entry>
                  <f:entry>
                      <div align="right">
                          <f:repeatableDeleteButton />
                      </div>
                  </f:entry>
              </table>
          </f:repeatable>
      </f:entry>
  </f:block>
  <hr />
    <h4>Anka VM Template/Tag Creation</h4>
    <f:section style="font-size: 10px;" description="Pushes a new Anka VM Tag to the registry when the build finishes">
      <f:optionalBlock inline="true" field="saveImage" title="Enabled" checked="${instance.getSaveImage()}">
        <f:entry title="${%Target Anka VM Template}"  field="templateId" description="The Anka VM Template to save the new Tag to">
            <f:select />
        </f:entry>
        <f:entry title="${%Tag Name}"  field="pushTag" description="Tag Name to use (date will be appended to tag string by default)">
            <f:textbox />
        </f:entry>
        <f:entry title="${%Disable Timestamp Append}"  field="dontAppendTimestamp" description="Don't append timestamp to Tag Name">
            <f:checkbox />
        </f:entry>
        <f:entry title="${%Description}"  field="description" description="Description for the new Tag">
            <f:textbox />
        </f:entry>
        <f:entry title="${%Suspend Tag}" name="suspend" field="suspend" description="Suspend the Tag before pushing it to registry">
            <f:checkbox />
        </f:entry>
        <f:entry title="${%Delete Latest Tag}" name="deleteLatest" field="deleteLatest" description="Delete the latest tag in the registry before pushing">
            <f:checkbox />
        </f:entry>
        <f:entry title="${%Wait For Build Finish}" name="waitForBuildToFinish" field="waitForBuildToFinish" description="When using pipeline, check this box if you want the vm to wait for the job's completion before pushing the new image to the registry. You probably should not use this option if you are setting 'currentBuild.result' with try-catch. Also, using ankaGetSaveImageResult is redundant">
            <f:checkbox />
        </f:entry>
      </f:optionalBlock>
    </f:section>
  <hr />
  <f:advanced>
      <f:entry title="${%Node Group}" field="group" description="The Anka Build Cloud Node group the Anka VM is started on (enterprise only)">
          <f:select />
      </f:entry>
      <f:entry title="${%Priority}" field="priority" description="The Anka Build Cloud VM start priority. Lower numbers get a higher priority (enterprise only)">
          <f:textbox clazz="number" default="0" />
      </f:entry>
      <f:entry title="${%Scheduling Timeout}" field="schedulingTimeout" description="Seconds the Scheduling Anka VM is allowed to wait in the Anka Build Cloud Controller queue">
          <f:textbox clazz="number" default="${descriptor.schedulingTimeout}"/>
      </f:entry>
      <f:entry title="${%Idle Check Timeout}" field="idleMinutes" description="Number of minutes between idle Anka VM checks">
          <f:textbox clazz="number" default="1"/>
      </f:entry>
  </f:advanced>
</j:jelly>
